<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev on Datumorphism</title><link>https://datumorphism.leima.is/tags/dev/</link><description>Recent content in Dev on Datumorphism</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 30 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://datumorphism.leima.is/tags/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Bloom Filter</title><link>https://datumorphism.leima.is/cards/dev/bloom-filter/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://datumorphism.leima.is/cards/dev/bloom-filter/</guid><description>Bloom filter returns1
probably yes, or no. element in set element not in set bloom filter returns no ✗ ✓ bloom filter returns probably yes ✓ ✓ How a Bloom Filter Works bytebytego_bloomfilter ByteByteGo. Bloom Filters. In: Real-world Examples - YouTube [Internet]. 6 Sep 2022 [cited 31 Oct 2023]. Available: https://www.youtube.com/watch?v=V3pzxngeLqw &amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Idempotence</title><link>https://datumorphism.leima.is/cards/dev/idempotence/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://datumorphism.leima.is/cards/dev/idempotence/</guid><description>Data pipelines fails. Just like rebooting a system, a first fix if we don&amp;rsquo;t spot any obvious error message is to retry.
A secret weapon to make sure retry works is to make our data pipeline idempotent.</description></item><item><title>SLA, SLO, SLI</title><link>https://datumorphism.leima.is/cards/dev/sla-slo-sli/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://datumorphism.leima.is/cards/dev/sla-slo-sli/</guid><description>As a person who is interacting with data, it is crucial to understand how the data is delivered.
In the engineering realm, engineers are using the terms Service Level Agreements (SLA), Service Level Objectives (SLO), and Service Level Indicators (SLI), to align on the mutual understanding of the system.
In the data world, it is also crucial to read them whenever they are available.</description></item><item><title>Basics of Redis</title><link>https://datumorphism.leima.is/wiki/computation/basics-of-redis/</link><pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate><guid>https://datumorphism.leima.is/wiki/computation/basics-of-redis/</guid><description>Basics Redis is:
NoSQL KeyValue In memory Data Structure Server binary safe strings lists, sets, sorted sets, hashes bitmaps, hyperloglogs Open source Redis is:
Fast Low CPU Requirement Scalable Redis can be used as:
Cache Analytics Leaderboard Queues Cookie storage Expiring data Messaging High I/O workloads API throttlings How to persist your data
Snapshot AOF: Append Only File Pros:
Redis has both data store and job queue built in Redis is a data structure server so is has flexibe data structures Redis is fast Cons:
Redis used a lot of RAM Redis can be be queued by value Comparisons
SQL NoSQL Flat file Rabbit ActiveMQ How to Use it Redis can be used as a handy data storage for data science projects.</description></item></channel></rss>