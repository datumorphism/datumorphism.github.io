<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wiki/machine-learning/generative-models/variational-autoencoder.md on Datumorphism</title><link>https://datumorphism.leima.is/links/wiki/machine-learning/generative-models/variational-autoencoder.md/</link><description>Recent content in wiki/machine-learning/generative-models/variational-autoencoder.md on Datumorphism</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://datumorphism.leima.is/links/wiki/machine-learning/generative-models/variational-autoencoder.md/index.xml" rel="self" type="application/rss+xml"/><item><title>Diffusion Models for Forecasting</title><link>https://datumorphism.leima.is/wiki/machine-learning/energy-based-model/diffusion-model/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://datumorphism.leima.is/wiki/machine-learning/energy-based-model/diffusion-model/</guid><description>Objective Given input $\mathbf x^0$ from a very complicated and unknown distribution $q(\mathbf x^0)$, we find a latent space with simple and manageable distribution, and the transformations from $\mathbf x^0$ to $\mathbf x^n$ as well as from $\mathbf x^n$ to $\mathbf x^0$. For example, with $N=5$, we have the forward process
flowchart LR x0 -- x1 -- x2 -- x3 -- x4 -- x5 and the reverse process
flowchart LR x5 -- x4 -- x3 -- x2 -- x1 -- x0 Diffusion model assumes each step is Markovian,
$$ q(\mathbf x^1, \mathbf x^2, \mathbf x^3, \mathbf x^4, \mathbf x^5 \vert \mathbf x^0) = q(\mathbf x^5\vert \mathbf x^4) q(\mathbf x^4\vert \mathbf x^3) q(\mathbf x^3\vert \mathbf x^2)q(\mathbf x^2\vert \mathbf x^1)q(\mathbf x^1\vert \mathbf x^0), $$</description></item></channel></rss>