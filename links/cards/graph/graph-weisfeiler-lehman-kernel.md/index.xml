<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cards/graph/graph-weisfeiler-lehman-kernel.md on Datumorphism</title><link>https://datumorphism.leima.is/links/cards/graph/graph-weisfeiler-lehman-kernel.md/</link><description>Recent content in cards/graph/graph-weisfeiler-lehman-kernel.md on Datumorphism</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://datumorphism.leima.is/links/cards/graph/graph-weisfeiler-lehman-kernel.md/index.xml" rel="self" type="application/rss+xml"/><item><title>Graph Isomorphism</title><link>https://datumorphism.leima.is/cards/graph/graph-isomorphism/</link><pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate><guid>https://datumorphism.leima.is/cards/graph/graph-isomorphism/</guid><description>For two graphs, $\mathcal G$ and $\mathcal H$, the two graphs are isomorphism on the following condition
$$ u, v \text{ adjacent in } G \iff u, v \text{ adjacent in } H. $$
An algorithm to find approximate isomorphism is the [[Weisfeiler Lehman Method]] Weisfeiler-Lehman Kernel The Weisfeiler-Lehman kernel is an iterative integration of neighborhood information. We initialize the labels for each node using its own node degree. At each step, we take the neighboring node degrees to form a multiset. At step $K$, we have the multisets for each node. Those multisets at each node can be processed to form an representation of the graph which is in turn used to calculate statistics of the graph.</description></item></channel></rss>