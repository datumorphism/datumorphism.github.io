{
    "_": "Message",
    "id": 311,
    "peer_id": {
        "_": "PeerChannel",
        "channel_id": 1320526773
    },
    "date": "2022-01-17 21:15:18+00:00",
    "message": "#python\n\nI thought it was a trivial talk in the beginning. \nBut I quickly realized that I may know every each piece of the code mentioned in the video but the philosophy is what makes it exciting. \n\nHe talked about some fundamental ideas of Python, e.g., protocols.\n\nAfter watching this video, an idea came to me. Pytorch lightning has implanted a lot of hooks in a very pythonic way. This is what makes pytorch lightning easy to use. (So if you do a lot of machine learning experiments, pytorch lightning is worth a try.)\n\nhttps://youtu.be/cKPlPJyQrt4",
    "out": true,
    "mentioned": false,
    "media_unread": false,
    "silent": false,
    "post": true,
    "from_scheduled": false,
    "legacy": false,
    "edit_hide": false,
    "pinned": false,
    "from_id": null,
    "fwd_from": null,
    "via_bot_id": null,
    "reply_to": null,
    "media": {
        "_": "MessageMediaWebPage",
        "webpage": {
            "_": "WebPage",
            "id": 5127856301755285629,
            "url": "https://youtu.be/cKPlPJyQrt4",
            "display_url": "youtube.com/watch?v=cKPlPJyQrt4",
            "hash": 0,
            "type": "video",
            "site_name": "YouTube",
            "title": "James Powell: So you want to be a Python expert? | PyData Seattle 2017",
            "description": "www.pydata.org\n\nPyData is an educational program of NumFOCUS, a 501(c)3 non-profit organization in the United States. PyData provides a forum for the international community of users and developers of data analysis tools to share ideas and learn from each other. The global PyData network promotes discussion of best practices, new approaches, and emerging technologies for data management, processing, analytics, and visualization. PyData communities approach data science using many languages, including (but not limited to) Python, Julia, and R. \n\nPyData conferences aim to be accessible and community-driven, with novice to advanced level presentations. PyData tutorials and talks bring attendees the latest project features along with cutting-edge use cases. \n\n0:00 About PyData and being proficient in Python\n4:09 Important features of Python and audience survey\n7:40 Data model methods\n10:14 __init__ method\n11:15 __repr__ method\n12:17 __add__ method\n15:51 __len__ method\n18:42 __call__ method\n20:50 Metaclasses and the problem of writing safe library code\n27:00 Contraints on the library code using assert\n32:33 Compile-time vs run time executable code\n34:42 Disassembling class code and using __build_class__\n40:26 Constraining library code with the metaclass pattern\n47:22 Introducing decorators\n49:07 Code inspection\n57:36 Writing a timer function\n59:42 Decorator syntactic sugar\n1:03:00 Writing a ntimes decorator\n1:06:32 Wrapping functions into class\n1:10:51 Eager execution\n1:14:02 __iter__ and __next__ methods\n1:17:40 yield and the Generator syntax\n1:20:35 Coroutines and interleaving\n1:24:35 Context Managers\n1:25:30 Setup and teardown of resources\n1:28:38 Applying to SQL transactions\n1:30:10 __enter__ and __exit__ methods\n1:32:30 Links between generators and context managers\n1:36:02 Refactoring the SQL query code\n1:37:52 Wrapping up\n1:40:04 Opinions on writing clear code in Python\n1:48:18 Q&A\n\nS/o to https://github.com/mycaule for the video timestamps!\n\nWant to help add timestamps to our YouTube videos to help with discoverability? Find out more here: https://github.com/numfocus/YouTubeVideoTimestamps",
            "photo": {
                "_": "Photo",
                "id": 532580596610318941,
                "access_hash": -5472116337659432110,
                "file_reference": "b'\\x00d\\xd6\\t\\xf9\"/\\x02\\xafc-\\xf9-\\xf0cE\\xd8@\\x1aAR'",
                "date": "2017-09-02 08:07:29+00:00",
                "sizes": [
                    {
                        "_": "PhotoSize",
                        "type": "s",
                        "w": 90,
                        "h": 51,
                        "size": 754
                    },
                    {
                        "_": "PhotoSize",
                        "type": "m",
                        "w": 320,
                        "h": 180,
                        "size": 8243
                    },
                    {
                        "_": "PhotoSize",
                        "type": "x",
                        "w": 800,
                        "h": 450,
                        "size": 32403
                    },
                    {
                        "_": "PhotoSize",
                        "type": "y",
                        "w": 1280,
                        "h": 720,
                        "size": 65912
                    }
                ],
                "dc_id": 4,
                "has_stickers": false,
                "video_sizes": []
            },
            "embed_url": "https://www.youtube.com/embed/cKPlPJyQrt4",
            "embed_type": "iframe",
            "embed_width": 1280,
            "embed_height": 720,
            "duration": null,
            "author": null,
            "document": null,
            "cached_page": null,
            "attributes": []
        }
    },
    "reply_markup": null,
    "entities": [
        {
            "_": "MessageEntityHashtag",
            "offset": 0,
            "length": 7
        },
        {
            "_": "MessageEntityUrl",
            "offset": 524,
            "length": 28
        }
    ],
    "views": 226,
    "forwards": 1,
    "replies": {
        "_": "MessageReplies",
        "replies": 0,
        "replies_pts": 2539,
        "comments": true,
        "recent_repliers": [],
        "channel_id": 1159907975,
        "max_id": null,
        "read_max_id": null
    },
    "edit_date": "2022-01-18 07:05:17+00:00",
    "post_author": "Markt Mai",
    "grouped_id": null,
    "restriction_reason": [],
    "ttl_period": null,
    "tags": [
        "python"
    ]
}