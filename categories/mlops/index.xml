<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MLOps on Datumorphism</title><link>https://datumorphism.leima.is/categories/mlops/</link><description>Recent content in MLOps on Datumorphism</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Wed, 05 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://datumorphism.leima.is/categories/mlops/index.xml" rel="self" type="application/rss+xml"/><item><title>Comparison of MLOps Frameworks</title><link>https://datumorphism.leima.is/wiki/mlops/comparison-of-frameworks/</link><pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate><guid>https://datumorphism.leima.is/wiki/mlops/comparison-of-frameworks/</guid><description>Metaflow Docs
A framework for jupyter notebook data scientists.
Work locally on notebooks. Python environment management using conda. Work in the cloud with Sagemaker. Tasks Methods Comments Code Scripts/Jupyter Notebook Datastore local + S3 metaflow.S3 Compute local + AWS Batch Metadata metaflow service Metadata specifies flow executions: Flows, Runs, Steps, Tasks, and Artifacts. Scheduling AWS Step Functions Deployment AWS Demo
from metaflow import FlowSpec, step class BranchFlow(FlowSpec): @step def start(self): self.next(self.a, self.b) @step def a(self): self.</description></item></channel></rss>